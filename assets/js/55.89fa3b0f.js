(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{557:function(t,a,s){"use strict";s.r(a);var v=s(6),l=Object(v.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[s("img",{attrs:{src:"http://share.alihanniba.com/mac/2021-05-23-151521.jpg",alt:"题图"}})]),t._v(" "),s("blockquote",[s("p",[t._v("题图：Streetwill")])]),t._v(" "),s("p",[t._v("最近一周花了一些时间做设计。尽管流程图出来了，自己也觉得很清晰，但是在写代码的时候最开始还是无从下手。流程图的粒度太粗，且是以面向过程的思维在串，更细粒度的设计应该用伪码的方式表现出来。伪码既能体现细节，也能呈现面向对象的思想，同时让别人明白你的思考想法、看得懂你的架构。")]),t._v(" "),s("p",[t._v('加上周末两天，把设计模式粗略的看完了。没什么大的感觉，像单例、工厂、抽象工厂、策略等模式在项目中也用到过。但是不明白为什么要这么用，只是觉得这么用好用。系统的学习一遍之后明白了各个模式的应用场景以及为什么。可能记不了几天就会忘了，但是几种常用的模式需要多在项目中应用上才能"知其然也知其所以然"。')]),t._v(" "),s("p",[t._v("还有设计原则。像单一职责、开闭原则、DRY原则、KISS原则。这几个原则个人觉得要比设计模式更重要。一个是内功心法，一个是拳谱。基础打牢，上层建筑才能更加稳固。")]),t._v(" "),s("p",[t._v('这周跟田峰老师1v1。最大的一个收获是 "不要等到所有事情都万事俱备了才出发，一直在路上的收获也许更大"。之前我一直坚持，一定要在某一个领域十分精通了才能去做分享。一最起码不会被问住，二也不会误人子弟。但是哪儿有那么多精通的领域，分享不是一场教学，是交流和共建。这么想是不是就不怕丢人了。')]),t._v(" "),s("p",[t._v("几个主题：")]),t._v(" "),s("ul",[s("li",[t._v("kafka")]),t._v(" "),s("li",[t._v("binlog")]),t._v(" "),s("li",[t._v("mvcc")])]),t._v(" "),s("p",[t._v("感觉哪个都没到精通的程度。只能接下来几个月硬钢了。")]),t._v(" "),s("h3",{attrs:{id:""}},[s("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")])]),t._v(" "),s("img",{staticClass:"wechat-num",attrs:{src:"http://share.alihanniba.com/mac/490lq.png"}})])}),[],!1,null,null,null);a.default=l.exports}}]);